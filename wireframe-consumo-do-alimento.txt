<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wireframe Canvas - Consumo de Alimento</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        canvas {
            background-color: #ffffff;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <canvas id="wireframeCanvas"></canvas>

    <script>
        window.onload = function() {
            const canvas = document.getElementById('wireframeCanvas');
            const ctx = canvas.getContext('2d');

            // --- Paleta de Cores do Wireframe ---
            const C_FUNDO = '#ffffff';
            const C_BORDA = '#cccccc';
            const C_TEXTO_PRINCIPAL = '#333333';
            const C_TEXTO_SECUNDARIO = '#888888';
            const C_ELEMENTO_FUNDO = '#f5f5f5';

            function setupCanvas() {
                const padding = 40;
                canvas.width = window.innerWidth - padding;
                canvas.height = window.innerHeight - padding;
                drawWireframe();
            }

            // --- Funções Auxiliares de Desenho ---

            function drawBox(x, y, width, height, label = '') {
                ctx.strokeStyle = C_BORDA;
                ctx.fillStyle = C_FUNDO;
                ctx.beginPath();
                ctx.roundRect(x, y, width, height, 8);
                ctx.stroke();
                ctx.fill();

                if (label) {
                    ctx.fillStyle = C_TEXTO_PRINCIPAL;
                    ctx.font = 'bold 16px Arial';
                    ctx.fillText(label, x + 15, y + 25);
                    
                    ctx.strokeStyle = C_BORDA;
                    ctx.beginPath();
                    ctx.moveTo(x + 15, y + 35);
                    ctx.lineTo(x + width - 15, y + 35);
                    ctx.stroke();
                }
            }
            
            function drawCheckbox(label, x, y, checked = false) {
                const size = 16;
                ctx.strokeStyle = C_BORDA;
                ctx.lineWidth = 1.5;
                ctx.strokeRect(x, y, size, size);

                if (checked) {
                    ctx.fillStyle = C_TEXTO_PRINCIPAL;
                    ctx.beginPath();
                    ctx.moveTo(x + 4, y + 8);
                    ctx.lineTo(x + 7, y + 12);
                    ctx.lineTo(x + 12, y + 5);
                    ctx.stroke();
                }
                
                ctx.fillStyle = C_TEXTO_SECUNDARIO;
                ctx.font = '14px Arial';
                ctx.textAlign = 'left';
                ctx.textBaseline = 'middle';
                ctx.fillText(label, x + size + 8, y + size / 2);
                ctx.textBaseline = 'alphabetic'; // reset
            }

            function drawInput(label, x, y, width, height = 40) {
                ctx.fillStyle = C_TEXTO_SECUNDARIO;
                ctx.font = '14px Arial';
                ctx.fillText(label, x, y - 8);

                ctx.strokeStyle = C_BORDA;
                ctx.fillStyle = C_ELEMENTO_FUNDO;
                ctx.beginPath();
                ctx.roundRect(x, y, width, height, 4);
                ctx.stroke();
                ctx.fill();
            }

            function drawButton(label, x, y, width, height = 40) {
                ctx.strokeStyle = C_BORDA;
                ctx.fillStyle = C_ELEMENTO_FUNDO;
                ctx.beginPath();
                ctx.roundRect(x, y, width, height, 4);
                ctx.stroke();
                ctx.fill();

                ctx.fillStyle = C_TEXTO_PRINCIPAL;
                ctx.font = 'bold 14px Arial';
                ctx.textAlign = 'center';
                ctx.textBaseline = 'middle';
                ctx.fillText(label, x + width / 2, y + height / 2);
                ctx.textAlign = 'left'; 
                ctx.textBaseline = 'alphabetic';
            }
            
            function drawDropdown(label, x, y, width, height = 40) {
                 drawInput(label, x, y, width, height);
                 const arrowX = x + width - 20;
                 const arrowY = y + height / 2;
                 ctx.strokeStyle = C_TEXTO_SECUNDARIO;
                 ctx.beginPath();
                 ctx.moveTo(arrowX - 5, arrowY - 3);
                 ctx.lineTo(arrowX, arrowY + 3);
                 ctx.lineTo(arrowX + 5, arrowY - 3);
                 ctx.stroke();
            }
            
            function drawTable(x, y, width, height, headers, rowCount) {
                drawBox(x,y,width,height);
                const rowHeight = 40;
                const headerHeight = 35;
                
                ctx.fillStyle = C_ELEMENTO_FUNDO;
                ctx.fillRect(x, y, width, headerHeight);
                ctx.strokeStyle = C_BORDA;
                ctx.strokeRect(x, y, width, headerHeight);

                const colWidth = width / headers.length;
                ctx.fillStyle = C_TEXTO_PRINCIPAL;
                ctx.font = 'bold 13px Arial';
                headers.forEach((header, i) => {
                    ctx.fillText(header, x + (i * colWidth) + 10, y + 23);
                });

                for (let i = 0; i < rowCount; i++) {
                    const rowY = y + headerHeight + (i * rowHeight);
                    if (rowY + rowHeight > y + height) break; 
                    ctx.strokeRect(x, rowY, width, rowHeight);
                    ctx.font = '14px Arial';
                    ctx.fillStyle = C_TEXTO_SECUNDARIO;
                    ctx.beginPath();
                    ctx.moveTo(x + 10, rowY + 10);
                    ctx.lineTo(x + width - 10, rowY + rowHeight - 10);
                    ctx.moveTo(x + width - 10, rowY + 10);
                    ctx.lineTo(x + 10, rowY + rowHeight - 10);
                    ctx.stroke();
                }
            }
            
            function drawChart(x, y, width, height, label) {
                drawBox(x, y, width, height, label);
                const padding = { top: 60, right: 30, bottom: 40, left: 50 };
                const chartAreaX = x + padding.left;
                const chartAreaY = y + padding.top;
                const chartAreaWidth = width - padding.left - padding.right;
                const chartAreaHeight = height - padding.top - padding.bottom;
                
                // Desenha eixos
                ctx.strokeStyle = C_BORDA;
                ctx.beginPath();
                ctx.moveTo(chartAreaX, chartAreaY);
                ctx.lineTo(chartAreaX, chartAreaY + chartAreaHeight);
                ctx.lineTo(chartAreaX + chartAreaWidth, chartAreaY + chartAreaHeight);
                ctx.stroke();
                
                // Linha 1: Lactação 1 (azul)
                ctx.strokeStyle = '#007bff';
                ctx.lineWidth = 2;
                ctx.beginPath();
                ctx.moveTo(chartAreaX, chartAreaY + chartAreaHeight * 0.8);
                ctx.lineTo(chartAreaX + chartAreaWidth * 0.2, chartAreaY + chartAreaHeight * 0.6);
                ctx.lineTo(chartAreaX + chartAreaWidth * 0.4, chartAreaY + chartAreaHeight * 0.7);
                ctx.lineTo(chartAreaX + chartAreaWidth * 0.6, chartAreaY + chartAreaHeight * 0.4);
                ctx.lineTo(chartAreaX + chartAreaWidth * 0.8, chartAreaY + chartAreaHeight * 0.5);
                ctx.lineTo(chartAreaX + chartAreaWidth, chartAreaY + chartAreaHeight * 0.3);
                ctx.stroke();

                // Linha 2: Lactação 2 (verde)
                ctx.strokeStyle = '#28a745';
                ctx.beginPath();
                ctx.moveTo(chartAreaX, chartAreaY + chartAreaHeight * 0.9);
                ctx.lineTo(chartAreaX + chartAreaWidth * 0.2, chartAreaY + chartAreaHeight * 0.75);
                ctx.lineTo(chartAreaX + chartAreaWidth * 0.4, chartAreaY + chartAreaHeight * 0.8);
                ctx.lineTo(chartAreaX + chartAreaWidth * 0.6, chartAreaY + chartAreaHeight * 0.6);
                ctx.lineTo(chartAreaX + chartAreaWidth * 0.8, chartAreaY + chartAreaHeight * 0.65);
                ctx.lineTo(chartAreaX + chartAreaWidth, chartAreaY + chartAreaHeight * 0.5);
                ctx.stroke();
                
                ctx.lineWidth = 1; // reset

                // Desenha Legenda
                const legendX = x + width - 150;
                const legendY = y + 20;
                
                ctx.fillStyle = '#007bff';
                ctx.fillRect(legendX, legendY, 10, 10);
                ctx.fillStyle = C_TEXTO_SECUNDARIO;
                ctx.font = '12px Arial';
                ctx.fillText('Lactação 1', legendX + 15, legendY + 9);

                ctx.fillStyle = '#28a745';
                ctx.fillRect(legendX, legendY + 15, 10, 10);
                ctx.fillStyle = C_TEXTO_SECUNDARIO;
                ctx.fillText('Lactação 2', legendX + 15, legendY + 24);
            }

            // --- Função Principal de Desenho ---
            function drawWireframe() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);

                const margin = 20;
                const contentWidth = canvas.width - (margin * 2);
                
                ctx.fillStyle = C_TEXTO_PRINCIPAL;
                ctx.font = 'bold 24px Arial';
                ctx.fillText('Controle de Consumo de Alimento', margin, margin + 20);
                
                const selectorY = margin + 50;
                const selectorHeight = 160;
                drawBox(margin, selectorY, contentWidth, selectorHeight, 'Seleção e Filtros');
                
                const dropdownWidth = contentWidth * 0.6;
                drawDropdown('Selecione o Animal', margin + 20, selectorY + 50, dropdownWidth - 40);

                const filterX = margin + dropdownWidth;
                ctx.fillStyle = C_TEXTO_SECUNDARIO;
                ctx.font = 'bold 14px Arial';
                ctx.fillText('Comparar Lactações:', filterX, selectorY + 60);

                drawCheckbox('Lactação 1 (Atual)', filterX, selectorY + 80, true);
                drawCheckbox('Lactação 2', filterX, selectorY + 105, true);
                drawCheckbox('Lactação 3', filterX, selectorY + 130, false);


                const layoutY = selectorY + selectorHeight + margin;
                const formWidth = contentWidth * 0.33;
                const dataWidth = contentWidth * 0.65;
                const gap = contentWidth * 0.02;
                const layoutHeight = canvas.height - layoutY - margin;

                // Coluna da Esquerda (Formulário)
                const formX = margin;
                drawBox(formX, layoutY, formWidth, layoutHeight, 'Registrar Consumo');

                let currentY = layoutY + 60;
                const inputWidth = formWidth - 40;
                
                drawInput('Data da Medição', formX + 20, currentY, inputWidth);
                currentY += 70;
                
                drawDropdown('Tipo de Alimento / Dieta', formX + 20, currentY, inputWidth);
                currentY += 70;
                
                const smallInputWidth = (inputWidth - 10) / 2;
                drawInput('Peso Oferecido (kg)', formX + 20, currentY, smallInputWidth);
                drawInput('Peso Sobras (kg)', formX + 20 + smallInputWidth + 10, currentY, smallInputWidth);
                currentY += 80;

                drawButton('Salvar Consumo', formX + 20, currentY, inputWidth);


                // Coluna da Direita (Gráfico e Tabela)
                const dataX = formX + formWidth + gap;
                const chartHeight = layoutHeight * 0.5 - (margin / 2);
                const tableY = layoutY + chartHeight + margin;
                const tableHeight = layoutHeight * 0.5 - (margin / 2);

                drawChart(dataX, layoutY, dataWidth, chartHeight, 'Comparativo de Consumo por Lactação (kg)');
                
                const tableHeaders = ['Data', 'Alimento', 'Lact.', 'Oferecido', 'Sobras', 'Consumo', 'Ações'];
                drawTable(dataX, tableY, dataWidth, tableHeight, tableHeaders, 3);
            }

            // --- Event Listeners ---
            window.addEventListener('resize', setupCanvas);
            setupCanvas();
        };
    </script>
</body>
</html>

